// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/12/Keyboard.jack

/**
 * A library for handling user input from the keyboard.
 */
class Keyboard {

    /** Initializes the keyboard. */
    function void init() {
    } 

    /**
     * Returns the character of the currently pressed key on the keyboard;
     * if no key is currently pressed, returns 0.
     *
     * Recognizes all ASCII characters, as well as the following keys:
     * new line = 128 = String.newline()
     * backspace = 129 = String.backspace()
     * left arrow = 130
     * up arrow = 131
     * right arrow = 132
     * down arrow = 133
     * home = 134
     * End = 135
     * page up = 136
     * page down = 137
     * insert = 138
     * delete = 139
     * ESC = 140
     * F1 - F12 = 141 - 152
     */
    function char keyPressed() {
        return Memory.peek(24576);
    }

    /**								
     * Waits until a key is pressed on the keyboard and released,
     * then echoes the key to the screen, and returns the character 
     * of the pressed key.
     */
    function char readChar() {
        var char c;
        //TODO: Display cursor
        while (keyPressed() == 0) {}
        let c = Keyboard.keyPressed();
        while (keyPressed() == c) {}
        Output.printChar(c);
        return c;
    }

    /**								
     * Displays the message on the screen, reads from the keyboard the entered
     * text until a newline character is detected, echoes the text to the screen,
     * and returns its value. Also handles user backspaces.
     */
    function String readLine(String message) {
        var char c;
        var String s;
        Output.print(message);
        let s = "";
        while (true) {
            let c = Keyboard.readChar();
            if (c = String.newLine()) {
                Output.println();
                return s;
            }
            if (c = String.backspace()) {
                s.eraseLastChar();
                Output.backspace();
            } else {
                s = s.appendChar(c);
            }
        }
        return s;
    }   

    /**								
     * Displays the message on the screen, reads from the keyboard the entered
     * text until a newline character is detected, echoes the text to the screen,
     * and returns its integer value (until the first non-digit character in the
     * entered text is detected). Also handles user backspaces. 
     */
    function int readInt(String message) {
        var int i, value;
        var bool negative, done;
        var String s;

        let value = 0;
        let negative = s.charAt(0) = '-';
        let i = negative;
        let s = Keyboard.readLine(message);
        while (i < s.length() & ~done) {
            if (s.charAt(i) < '0' | s.charAt(i) > '9') {
                let done = true;
            } else {
                let value = value * 10 + s.charAt(i) - '0';
                i = i + 1;
            }
        }
        if (negative) {
            return -value;
        }
        return value;
    }
}
