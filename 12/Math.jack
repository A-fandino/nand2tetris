// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/12/Math.jack

/**
 * A library of commonly used mathematical functions.
 * Note: Jack compilers implement multiplication and division using OS method calls.
 */
class Math {

    /** Initializes the library. */
    function void init() {
        return;
    }

    /** Returns the absolute value of x. */
    function int abs(int x) {
        return 0;
    }

    /** Returns the product of x and y. 
     *  When a Jack compiler detects the multiplication operator '*' in the 
     *  program's code, it handles it by invoking this method. In other words,
     *  the Jack expressions x*y and multiply(x,y) return the same value.
     */
    function int multiply(int x, int y) {
        var int sum, i, bitMask;
        let i = 0;
        let bitMask = 1;
        while (i < 16) {
            if (y & bitMask) {
                let sum = sum + x;
            }
            let bitMask = bitMask + bitMask;
            let x = x + x;
            let i = i + 1;
        }
        return sum;
    }

    /** Returns the integer part of x/y.
     *  When a Jack compiler detects the multiplication operator '/' in the 
     *  program's code, it handles it by invoking this method. In other words,
     *  the Jack expressions x/y and divide(x,y) return the same value.
     */
    function int divide(int x, int y) {
        var int q;
        if (y > x) {
            return 0;
        }
        let q = Math.divide(x, y + y);
        if ((x - (2 * q * y)) < y) {
            return (2 * q);
        } else {
            return (2 * q) + 1;
        }
    }

    /** Returns the integer part of the square root of x. */
    function int sqrt(int x) {
        return 0;
    }

    function int pow(int base, int power) {
        var int result;
        let result = 1;

        while (power > 0) {
            if (power & 1) { // power is odd
                let result = result * base;
            }
            let power = power / 2;
            let base = base * base;
        }
        return result;
    }

    /** Returns the greater number. */
    function int max(int a, int b) {
        return 0;
    }

    /** Returns the smaller number. */
    function int min(int a, int b) {
        return 0;
    }
}
